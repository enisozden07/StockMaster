// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240523100037_AdditionalAttributes")]
    partial class AdditionalAttributes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic items",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Clothing items",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Home and kitchen items",
                            Name = "Home & Kitchen"
                        });
                });

            modelBuilder.Entity("API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Elm Street",
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue",
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Phone = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Maple Drive",
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Phone = "555-555-5555"
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Pine Lane",
                            Email = "bob.brown@example.com",
                            Name = "Bob Brown",
                            Phone = "111-222-3333"
                        });
                });

            modelBuilder.Entity("API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1274)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1286)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            OrderDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1288)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            OrderDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1289)
                        });
                });

            modelBuilder.Entity("API.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            UnitPrice = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 2,
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 3,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            ProductId = 7,
                            Quantity = 1,
                            UnitPrice = 89.99m
                        });
                });

            modelBuilder.Entity("API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High performance laptop",
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 799.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Bestselling novel",
                            Name = "Novel",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Cotton t-shirt",
                            Name = "T-Shirt",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Denim jeans",
                            Name = "Jeans",
                            Price = 39.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Description = "High-speed blender",
                            Name = "Blender",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Description = "Compact microwave oven",
                            Name = "Microwave",
                            Price = 89.99m
                        });
                });

            modelBuilder.Entity("API.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ShipmentDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1326),
                            SupplierId = 1,
                            TrackingNumber = "TRACK123"
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ShipmentDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1328),
                            SupplierId = 2,
                            TrackingNumber = "TRACK456"
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ShipmentDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1331),
                            SupplierId = 3,
                            TrackingNumber = "TRACK789"
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            ShipmentDate = new DateTime(2024, 5, 23, 13, 0, 37, 353, DateTimeKind.Local).AddTicks(1334),
                            SupplierId = 4,
                            TrackingNumber = "TRACK012"
                        });
                });

            modelBuilder.Entity("API.Models.StockLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StockLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 50,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 30,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            Quantity = 100,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            Quantity = 200,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 5,
                            Quantity = 150,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 6,
                            Quantity = 75,
                            WarehouseId = 4
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 7,
                            Quantity = 60,
                            WarehouseId = 4
                        });
                });

            modelBuilder.Entity("API.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "tech.supplies@example.com",
                            Name = "Tech Supplies Inc."
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "book.distributors@example.com",
                            Name = "Book Distributors Ltd."
                        },
                        new
                        {
                            Id = 3,
                            ContactInfo = "fashion.house@example.com",
                            Name = "Fashion House Co."
                        },
                        new
                        {
                            Id = 4,
                            ContactInfo = "home.goods@example.com",
                            Name = "Home Goods Supplier"
                        });
                });

            modelBuilder.Entity("API.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "New York",
                            Manager = "John Manager"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Los Angeles",
                            Manager = "Jane Manager"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Chicago",
                            Manager = "Alice Manager"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Houston",
                            Manager = "Bob Manager"
                        });
                });

            modelBuilder.Entity("API.Models.Order", b =>
                {
                    b.HasOne("API.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("API.Models.OrderDetail", b =>
                {
                    b.HasOne("API.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("API.Models.Product", b =>
                {
                    b.HasOne("API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("API.Models.Shipment", b =>
                {
                    b.HasOne("API.Models.Order", "Order")
                        .WithMany("Shipments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Supplier", "Supplier")
                        .WithMany("Shipments")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("API.Models.StockLevel", b =>
                {
                    b.HasOne("API.Models.Product", "Product")
                        .WithMany("StockLevels")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Warehouse", "Warehouse")
                        .WithMany("StockLevels")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("API.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("API.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("API.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("StockLevels");
                });

            modelBuilder.Entity("API.Models.Supplier", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("API.Models.Warehouse", b =>
                {
                    b.Navigation("StockLevels");
                });
#pragma warning restore 612, 618
        }
    }
}
